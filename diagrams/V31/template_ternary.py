#!/usr/bin/env python
#coding=utf8

"""
this file is a copy of Ternary.py

#连结结构不变，变的只是位置
#the keys are names of vertices,  the tuples in the values are infect edges labeled by (node, kth leg), 
note that the values are ordered.
I_n are just  place holders, they are to be replaced by hamiltonian ops. 
"""
U_tmpl = """ 
     "U_%(U)s":[("I_%(I1)s", 2), ("I_%(I2)s", 2), ("V_%(V1)s", 3), ("V_%(V2)s",1)], 
    "Up_%(U)s":[("Vp_%(V1)s", 4), ("Vp_%(V2)s",2), ("I_%(I1)s", 1), ("I_%(I2)s", 1)], 
    "I_%(I1)s":[("Up_%(U)s", 3), ("U_%(U)s", 1)],
    "I_%(I2)s":[("Up_%(U)s", 4), ("U_%(U)s", 2)], 
"""

V_tmpl = """
    "V_%(V)s":[("U_%(U1)s", 4), ("I_%(I)s", 2), ("U_%(U2)s", 3), ("O_%(O)s", 2)],
    "Vp_%(V)s":[("O_%(O)s", 1),("Up_%(U1)s",2), ("I_%(I)s", 1), ("Up_%(U2)s",1)],
    "I_%(I)s":[("Vp_%(V)s", 3), ("V_%(V)s", 2)],
    "O_%(O)s":[("Vp_%(V)s", 1), ("V_%(V)s",4)], 
"""


ooN_tmpl = """{
    "%(name)s_%(1)s_%(2)s":[("I_%(1)s",1), ("I_%(2)s", 1), ("I_%(1)s", 2), ("I_%(2)s", 2)],
    "I_%(1)s":[("%(name)s_%(1)s_%(2)s", 1), ("%(name)s_%(1)s_%(2)s", 3)],
    "I_%(2)s":[("%(name)s_%(1)s_%(2)s", 2), ("%(name)s_%(1)s_%(2)s", 4)]
}    
"""

#two site op.
oo2_tmpl =  """{
    "oo_%(1)s_%(2)s":[("I_%(1)s",1), ("I_%(2)s", 1), ("I_%(1)s", 2), ("I_%(2)s", 2)],
    "I_%(1)s":[("oo_%(1)s_%(2)s", 1), ("oo_%(1)s_%(2)s", 3)],
    "I_%(2)s":[("oo_%(1)s_%(2)s", 2), ("oo_%(1)s_%(2)s", 4)]
    }
"""


#two site op.
oo2_tmpl =  """{
    "oo_%(1)s_%(2)s":[("I_%(1)s",1), ("I_%(2)s", 1), ("I_%(1)s", 2), ("I_%(2)s", 2)],
    "I_%(1)s":[("oo_%(1)s_%(2)s", 1), ("oo_%(1)s_%(2)s", 3)],
    "I_%(2)s":[("oo_%(1)s_%(2)s", 2), ("oo_%(1)s_%(2)s", 4)]
    }
"""

#3 site op.
oo3_tmpl =  """{
    "ooo_%(1)s_%(2)s_%(3)s":[("I_%(1)s",1), ("I_%(2)s", 1), ("I_%(3)s", 1), ("I_%(1)s", 2), ("I_%(2)s", 2), ("I_%(3)s", 2)],
    "I_%(1)s":[("ooo_%(1)s_%(2)s_%(3)s", 1), ("ooo_%(1)s_%(2)s_%(3)s", 4)],
    "I_%(2)s":[("ooo_%(1)s_%(2)s_%(3)s", 2), ("ooo_%(1)s_%(2)s_%(3)s", 5)],
    "I_%(3)s":[("ooo_%(1)s_%(2)s_%(3)s", 3), ("ooo_%(1)s_%(2)s_%(3)s", 6)]
    }
"""

# where is this defined from?
G_3_top = {
    "V_0":[("U_1", 4), ("I_1", 2), ("U_0", 3), ("O_1", 2)],
    "V_1":[("U_0", 4), ("I_4", 2), ("U_1", 3), ("O_2", 2)],
    "U_0":[("I_2", 2), ("I_3", 2), ("V_0", 3), ("V_1", 1)],
    "U_1":[("I_5", 2), ("I_0", 2), ("V_1", 3), ("V_0", 1)],
    
    "Vp_0":[("O_1", 1), ("Up_1", 2), ("I_1", 1), ("Up_0", 1)],
    "Vp_1":[("O_2", 1), ("Up_0", 2), ("I_4", 1), ("Up_1", 1)],
    "Up_0":[("Vp_0", 4), ("Vp_1", 2), ("I_2", 1), ("I_3", 1)],
    "Up_1":[("Vp_1", 4), ("Vp_0", 2), ("I_5", 1), ("I_0", 1)],
    
    "I_0":[("Up_1", 4), ("U_1", 2)],
    "I_1":[("Vp_0", 3), ("V_0", 2)],
    "I_2":[("Up_0", 3), ("U_0", 1)],
    "I_3":[("Up_0", 4), ("U_0", 2)],
    "I_4":[("Vp_1", 3), ("V_1", 2)],
    "I_5":[("Up_1", 3), ("U_1", 1)],
    
    "O_1":[("Vp_0", 1), ("V_0", 4)],
    "O_2":[("Vp_1", 1), ("V_1", 4)]
    }


G3= {   
      "U_1":[("I_2", 2), ("I_3", 2), ("V_0", 3), ("V_1",1)], 
    "Up_1":[("Vp_0", 4), ("Vp_1",2), ("I_2", 1), ("I_3", 1)], 
    "I_2":[("Up_1", 3), ("U_1", 1)],
    "I_3":[("Up_1", 4), ("U_1", 2)], 
     
     "U_2":[("I_5", 2), ("I_6", 2), ("V_1", 3), ("V_2",1)], 
    "Up_2":[("Vp_1", 4), ("Vp_2",2), ("I_5", 1), ("I_6", 1)], 
    "I_5":[("Up_2", 3), ("U_2", 1)],
    "I_6":[("Up_2", 4), ("U_2", 2)], 
     
     "U_3":[("I_8", 2), ("I_9", 2), ("V_2", 3), ("V_3",1)], 
    "Up_3":[("Vp_2", 4), ("Vp_3",2), ("I_8", 1), ("I_9", 1)], 
    "I_8":[("Up_3", 3), ("U_3", 1)],
    "I_9":[("Up_3", 4), ("U_3", 2)], 
     
     "U_4":[("I_11", 2), ("I_12", 2), ("V_3", 3), ("V_4",1)], 
    "Up_4":[("Vp_3", 4), ("Vp_4",2), ("I_11", 1), ("I_12", 1)], 
    "I_11":[("Up_4", 3), ("U_4", 1)],
    "I_12":[("Up_4", 4), ("U_4", 2)], 
     
     "U_5":[("I_14", 2), ("I_15", 2), ("V_4", 3), ("V_5",1)], 
    "Up_5":[("Vp_4", 4), ("Vp_5",2), ("I_14", 1), ("I_15", 1)], 
    "I_14":[("Up_5", 3), ("U_5", 1)],
    "I_15":[("Up_5", 4), ("U_5", 2)], 
     
     "U_6":[("I_17", 2), ("I_18", 2), ("V_5", 3), ("V_6",1)], 
    "Up_6":[("Vp_5", 4), ("Vp_6",2), ("I_17", 1), ("I_18", 1)], 
    "I_17":[("Up_6", 3), ("U_6", 1)],
    "I_18":[("Up_6", 4), ("U_6", 2)], 




     "V_0":[("I_0", 2), ("I_1", 2), ("U_1", 3), ("O_0", 2)],
    "Vp_0":[("O_0", 1),("I_0",1), ("I_1", 1), ("Up_1",1)],
    "I_0":[("Vp_0", 2), ("V_0", 1)],
    "I_1":[("Vp_0", 3), ("V_0", 2)],
    "O_0":[("Vp_0", 1), ("V_0",4)], 

     "V_1":[("U_1", 4), ("I_4", 2), ("U_2", 3), ("O_1", 2)],
    "Vp_1":[("O_1", 1),("Up_1",2), ("I_4", 1), ("Up_2",1)],
    "I_4":[("Vp_1", 3), ("V_1", 2)],
    "O_1":[("Vp_1", 1), ("V_1",4)], 

     "V_2":[("U_2", 4), ("I_7", 2), ("U_3", 3), ("O_2", 2)],
    "Vp_2":[("O_2", 1),("Up_2",2), ("I_7", 1), ("Up_3",1)],
    "I_7":[("Vp_2", 3), ("V_2", 2)],
    "O_2":[("Vp_2", 1), ("V_2",4)], 

     "V_3":[("U_3", 4), ("I_10", 2), ("U_4", 3), ("O_3", 2)],
    "Vp_3":[("O_3", 1),("Up_3",2), ("I_10", 1), ("Up_4",1)],
    "I_10":[("Vp_3", 3), ("V_3", 2)],
    "O_3":[("Vp_3", 1), ("V_3",4)], 

     "V_4":[("U_4", 4), ("I_13", 2), ("U_5", 3), ("O_4", 2)],
    "Vp_4":[("O_4", 1),("Up_4",2), ("I_13", 1), ("Up_5",1)],
    "I_13":[("Vp_4", 3), ("V_4", 2)],
    "O_4":[("Vp_4", 1), ("V_4",4)], 

     "V_5":[("U_5", 4), ("I_16", 2), ("U_6", 3), ("O_5", 2)],
    "Vp_5":[("O_5", 1),("Up_5",2), ("I_16", 1), ("Up_6",1)],
    "I_16":[("Vp_5", 3), ("V_5", 2)],
    "O_5":[("Vp_5", 1), ("V_5",4)], 

     "V_6":[("U_6", 4), ("I_19", 2), ("I_20", 2), ("O_6", 2)],
    "Vp_6":[("O_6", 1),("Up_6",2), ("I_19", 1), ("I_20",1)],
    "I_19":[("Vp_6", 3), ("V_6", 2)],
    "I_20":[("Vp_6", 4), ("V_6", 3)],
    "O_6":[("Vp_6", 1), ("V_6",4)],     
}

G3_new = {
    "U_1":[("I_2", 2), ("I_3", 2), ("V_0", 3), ("V_1",1)], 
    "Up_1":[("Vp_0", 4), ("Vp_1",2), ("I_2", 1), ("I_3", 1)], 
    "I_2":[("Up_1", 3), ("U_1", 1)],
    "I_3":[("Up_1", 4), ("U_1", 2)], 

 
     "U_2":[("I_5", 2), ("I_6", 2), ("V_1", 3), ("V_2",1)], 
    "Up_2":[("Vp_1", 4), ("Vp_2",2), ("I_5", 1), ("I_6", 1)], 
    "I_5":[("Up_2", 3), ("U_2", 1)],
    "I_6":[("Up_2", 4), ("U_2", 2)], 

 
     "U_3":[("I_8", 2), ("I_9", 2), ("V_2", 3), ("V_3",1)], 
    "Up_3":[("Vp_2", 4), ("Vp_3",2), ("I_8", 1), ("I_9", 1)], 
    "I_8":[("Up_3", 3), ("U_3", 1)],
    "I_9":[("Up_3", 4), ("U_3", 2)], 


     "V_0":[("U_0", 4), ("I_1", 2), ("U_1", 3), ("O_0", 2)],
    "Vp_0":[("O_0", 1),("Up_0",2), ("I_1", 1), ("Up_1",1)],
    "I_1":[("Vp_0", 3), ("V_0", 2)],
    "O_0":[("Vp_0", 1), ("V_0",4)], 


     "V_1":[("U_1", 4), ("I_4", 2), ("U_2", 3), ("O_1", 2)],
    "Vp_1":[("O_1", 1),("Up_1",2), ("I_4", 1), ("Up_2",1)],
    "I_4":[("Vp_1", 3), ("V_1", 2)],
    "O_1":[("Vp_1", 1), ("V_1",4)], 


     "V_2":[("U_2", 4), ("I_7", 2), ("U_3", 3), ("O_2", 2)],
    "Vp_2":[("O_2", 1),("Up_2",2), ("I_7", 1), ("Up_3",1)],
    "I_7":[("Vp_2", 3), ("V_2", 2)],
    "O_2":[("Vp_2", 1), ("V_2",4)], 


     "V_3":[("U_3", 4), ("I_10", 2), ("U_4", 3), ("O_3", 2)],
    "Vp_3":[("O_3", 1),("Up_3",2), ("I_10", 1), ("Up_4",1)],
    "I_10":[("Vp_3", 3), ("V_3", 2)],
    "O_3":[("Vp_3", 1), ("V_3",4)], 
}

#graph for calc entanglement entropy
if 0: 
    G_calc_EE = {
            "rho_2":[('V_1_0', 4), ('V_1_1', 4), ('Vp_1_0', 1), ('Vp_1_1', 1)], 
            "V_00": [('')],   
            "V_01": [],            
            "V_10": [],   
            "V_11": [],            

            "Vp_00": [],   
            "Vp_01": [],            
            "Vp_10": [],   
            "Vp_11": [],            
        }

    

def make_template():
    res= "{"
    k = 7
    for i in xrange(1,k):
        j=i*3
        #算子的相对位置
        D={"U":i, "V1":i-1, "V2":i, "I1":j-1, "I2":j}
        #print U_tmpl % D
        res +=  U_tmpl % D
        
    for i in xrange(0,k):
        j=i*3+1
        D={"V":i, "I":j, "U1":i, "U2":i+1, "O":i}
        #print V_tmpl % D
        res += V_tmpl % D
    res+= "}" 
    return res


if __name__ == "__main__":
    from merapy.diagrams.diagram import compare_template
    g = make_template()
    g = eval(g)
    #print g
    compare_template(G3, g)


